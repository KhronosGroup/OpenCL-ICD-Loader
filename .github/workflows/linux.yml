name: Linux

on: [push, pull_request]

jobs:
  compatibility:
    runs-on: ubuntu-18.04
    container: streamhpc/opencl-sdk-intelcpu:ubuntu-18.04-20220127
    strategy:
      matrix:
        C_COMPILER: [gcc-7, gcc-11, clang-8, clang-13]
        CMAKE: [3.1.3]
        GEN: [Unix Makefiles]
        CONFIG: [Release]
        BIN: [64, 32]
        STD: [99, 11]
        EXT: [ON, OFF]
        include:
          - C_COMPILER: gcc-11
            CMAKE: 3.22.1
            GEN: Ninja Multi-Config
            BIN: 64
            STD: 17
            EXT: OFF
          - C_COMPILER: clang-13
            CMAKE: 3.22.1
            GEN: Ninja Multi-Config
            BIN: 64
            STD: 17
            EXT: OFF
    env:
      CMAKE_EXE: /opt/Kitware/CMake/${{ matrix.CMAKE }}/bin/cmake
      CTEST_EXE: /opt/Kitware/CMake/${{ matrix.CMAKE }}/bin/ctest


    steps:
    - name: Checkout OpenCL-ICD-Loader
      uses: actions/checkout@v2

    - name: Checkout OpenCL-Headers
      uses: actions/checkout@v2
      with:
        repository: KhronosGroup/OpenCL-Headers
        path: external/OpenCL-Headers

    - name: Build & install OpenCL-Headers
      shell: bash
      run: |
        $CMAKE_EXE \
          -G "${{matrix.GEN}}" \
          `if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]]; then echo -D CMAKE_BUILD_TYPE=${{matrix.CONFIG}}; fi;` \
          -D BUILD_TESTING=OFF \
          -D CMAKE_C_FLAGS="-w -m${{matrix.BIN}}" \
          -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}} \
          -D CMAKE_C_EXTENSIONS=OFF \
          -D CMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/external/OpenCL-Headers/install \
          -B$GITHUB_WORKSPACE/external/OpenCL-Headers/build \
          -H$GITHUB_WORKSPACE/external/OpenCL-Headers ;
        $CMAKE_EXE \
          --build $GITHUB_WORKSPACE/external/OpenCL-Headers/build \
          `if [[ "${{matrix.GEN}}" == "Ninja Multi-Config" ]]; then echo --config Release; fi;` \
          --target install \
          -- \
          -j`nproc`

    - name: Configure
      shell: bash
      run: $CMAKE_EXE
        -G "${{matrix.GEN}}"
        -D BUILD_TESTING=ON
        `if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]]; then echo -D CMAKE_BUILD_TYPE=${{matrix.CONFIG}}; fi;`
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror -m${{matrix.BIN}}"
        -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}}
        -D CMAKE_C_STANDARD=${{matrix.STD}}
        -D CMAKE_C_EXTENSIONS=${{matrix.EXT}}
        -D CMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install
        -D CMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/external/OpenCL-Headers/install"
        -B$GITHUB_WORKSPACE/build
        -H$GITHUB_WORKSPACE

    - name: Build
      shell: bash
      run: if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]];
        then
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build -- -j`nproc`;
        else
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build --config Debug   -- -j`nproc`;
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build --config Release -- -j`nproc`;
        fi;

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/OpenCL-ICD-Loader/build
      run: if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]];
        then
          $CTEST_EXE --output-on-failure --parallel `nproc`;
        else
          $CTEST_EXE --output-on-failure -C Debug   --parallel `nproc`;
          $CTEST_EXE --output-on-failure -C Release --parallel `nproc`;
        fi;

    - name: Install
      shell: bash
      run: $CMAKE_EXE
        --build $GITHUB_WORKSPACE/build
        --target install
        --config Release
        --
        -j`nproc`

    - name: "Consume (standalone): Configure/Build/Test"
      shell: bash
      run: |
        $CMAKE_EXE \
          -G "${{matrix.GEN}}" \
          `if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]]; then echo -D CMAKE_BUILD_TYPE=${{matrix.CONFIG}}; fi;` \
          -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}} \
          -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -m${{matrix.BIN}}" \
          -D CMAKE_C_STANDARD=${{matrix.STD}} \
          -D CMAKE_C_EXTENSIONS=${{matrix.EXT}} \
          -D CMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/external/OpenCL-Headers/install;$GITHUB_WORKSPACE/install" \
          `if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]]; \
            then echo -D DRIVER_STUB_PATH=$GITHUB_WORKSPACE/build/libOpenCLDriverStub.so ; \
            else echo -D DRIVER_STUB_PATH=$GITHUB_WORKSPACE/build/Release/libOpenCLDriverStub.so ; \
          fi;` \
          -B$GITHUB_WORKSPACE/build/downstream/bare \
          -H$GITHUB_WORKSPACE/test/pkgconfig/bare ;
        if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]]; \
        then \
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build/downstream/bare --config Release; \
          cd $GITHUB_WORKSPACE/build/downstream/bare; \
          $CTEST_EXE --output-on-failure --parallel `nproc`; \
        else \
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build/downstream/bare --config Release; \
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build/downstream/bare --config Debug; \
          cd $GITHUB_WORKSPACE/build/downstream/bare; \
          $CTEST_EXE --output-on-failure -C Debug   --parallel `nproc`; \
          $CTEST_EXE --output-on-failure -C Release --parallel `nproc`; \
        fi;

    - name: "Consume (SDK): Configure/Build/Test"
      shell: bash
      run: |
        $CMAKE_EXE -E make_directory $GITHUB_WORKSPACE/install/share/cmake/OpenCL ;
        echo -e 'include("/__w/OpenCL-ICD-Loader/OpenCL-ICD-Loader/external/OpenCL-Headers/install/share/cmake/OpenCLHeaders/OpenCLHeadersTargets.cmake")\ninclude("${CMAKE_CURRENT_LIST_DIR}/../OpenCLICDLoader/OpenCLICDLoaderTargets.cmake")' > $GITHUB_WORKSPACE/install/share/cmake/OpenCL/OpenCLConfig.cmake ;
        $CMAKE_EXE \
          -G "${{matrix.GEN}}" \
          `if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]]; then echo -D CMAKE_BUILD_TYPE=${{matrix.CONFIG}}; fi;` \
          -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}} \
          -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -m${{matrix.BIN}}" \
          -D CMAKE_C_STANDARD=${{matrix.STD}} \
          -D CMAKE_C_EXTENSIONS=${{matrix.EXT}} \
          -D CMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/external/OpenCL-Headers/install;$GITHUB_WORKSPACE/install" \
          `if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]]; \
            then echo -D DRIVER_STUB_PATH=$GITHUB_WORKSPACE/build/libOpenCLDriverStub.so ; \
            else echo -D DRIVER_STUB_PATH=$GITHUB_WORKSPACE/build/Release/libOpenCLDriverStub.so ; \
          fi;` \
          -B$GITHUB_WORKSPACE/build/downstream/sdk \
          -H$GITHUB_WORKSPACE/test/pkgconfig/sdk ;
        if [[ "${{matrix.GEN}}" == "Unix Makefiles" ]]; \
        then \
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build/downstream/sdk --config Release; \
          cd $GITHUB_WORKSPACE/build/downstream/sdk; \
          $CTEST_EXE --output-on-failure --parallel `nproc`; \
        else \
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build/downstream/sdk --config Release; \
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build/downstream/sdk --config Debug; \
          cd $GITHUB_WORKSPACE/build/downstream/sdk; \
          $CTEST_EXE --output-on-failure -C Debug   --parallel `nproc`; \
          $CTEST_EXE --output-on-failure -C Release --parallel `nproc`; \
        fi;
